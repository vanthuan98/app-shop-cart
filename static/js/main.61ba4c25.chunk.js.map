{"version":3,"sources":["Components/Constants/constants.js","Components/Actions/actions.js","Components/taskForm.js","Components/taskControl.js","Components/taskContent.js","App.js","reportWebVitals.js","Components/Reducers/items.js","Components/Reducers/editItem.js","Components/Reducers/searchItem.js","Components/Reducers/sortItem.js","Components/Reducers/index.js","index.js"],"names":["LIST_ITEM","ADD_ITEM","DELETE_ITEM","EDIT_ITEM","SEARCH_ITEM","SORT_ITEM","editItem","item","index","type","constants","TaskForm","props","saveItem","e","preventDefault","itemEdit","valueName","inputName","current","value","valueStatus","inputStatus","editing","id","name","status","trim","length","changeEditing","uuidv4","React","createRef","this","className","defaultValue","ref","onClick","cancelAddItem","Component","connect","state","dispatch","actions","TaskControl","onSearch","keyword","onSearchItem","inputSearch","onSortItem","typeSort","mapDispatchToProps","TaskContent","deleteItem","window","location","reload","itemsShow","listItem","keywordSearch","sortItem","filter","toLowerCase","indexOf","sort","a","b","x","y","items","map","searchItem","App","editTask","editting","editStatus","editTaskIndex","setState","valueSearch","wordOnSearch","taskItems","editTaskItem","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","dataLocal","JSON","parse","localStorage","getItem","initialState","myReducers","action","i","undefined","splice","push","setItem","stringify","newItems","combineReducers","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","console","log","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.61ba4c25.chunk.js","sourcesContent":["export const LIST_ITEM = 'LIST_ITEM';\r\nexport const ADD_ITEM = 'ADD_ITEM';\r\nexport const DELETE_ITEM = 'DELETE_ITEM';\r\nexport const EDIT_ITEM = 'EDIT_ITEM';\r\nexport const SEARCH_ITEM = 'SEARCH_ITEM';\r\nexport const SORT_ITEM = 'SORT_ITEM';","import * as constants from './../Constants/constants';\r\n\r\nexport const listItem = () => {\r\n    return {\r\n        type: constants.LIST_ITEM,\r\n    }\r\n}\r\n\r\nexport const addItem = (item) => {\r\n    return {\r\n        type: constants.ADD_ITEM,\r\n        item,\r\n    }\r\n}\r\n\r\nexport const deleteItem = (id) => {\r\n    return {\r\n        type: constants.DELETE_ITEM,\r\n        id,\r\n    }\r\n}\r\n\r\nexport const editItem = (item, index) => {\r\n    return {\r\n        type: constants.EDIT_ITEM,\r\n        item,\r\n        index,\r\n    }\r\n}\r\n \r\nexport const searchItem = (keyword) => {\r\n    return {\r\n        type: constants.SEARCH_ITEM,\r\n        keyword\r\n    }\r\n}\r\n\r\nexport const sortItem = (typeSort) => {\r\n    return {\r\n        type: constants.SORT_ITEM,\r\n        typeSort,\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport * as actions from './Actions/actions';\r\nimport { connect } from 'react-redux';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nclass TaskForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.inputName = React.createRef();\r\n        this.inputStatus = React.createRef();\r\n    }\r\n\r\n    saveItem = (e) => {\r\n        e.preventDefault();\r\n        const { itemEdit } = this.props;\r\n        let valueName = this.inputName.current.value;\r\n        let valueStatus = this.inputStatus.current.value === 'Đang học' ? true : false;\r\n        if (itemEdit[0].editing) {\r\n            let item = {\r\n                id: itemEdit[1].id,\r\n                name: valueName,\r\n                status: valueStatus,\r\n            }\r\n            if (valueName.trim().length === 0) {\r\n                this.inputName.current.value = '';\r\n                this.props.changeEditing({ editing: false });\r\n                return\r\n            } else {\r\n                this.props.saveItem(item);\r\n                this.props.changeEditing({ editing: false });\r\n                this.inputName.current.value = '';\r\n                return\r\n            }\r\n        } else {\r\n            let item = {\r\n                id: uuidv4(),\r\n                name: valueName,\r\n                status: valueStatus,\r\n            }\r\n            if (valueName.trim().length === 0) {\r\n                this.inputName.current.value = '';\r\n                return\r\n            } else {\r\n                this.props.saveItem(item);\r\n                this.inputName.current.value = '';\r\n            }\r\n        }\r\n    }\r\n\r\n    cancelAddItem(e) {\r\n        e.preventDefault();\r\n        this.inputName.current.value = '';\r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n        const { itemEdit } = this.props;\r\n    \r\n        return (\r\n            <section className=\"task-form \">\r\n                <div className=\"title\">\r\n                    <h4>{ !itemEdit[0].editing ? 'Thêm sinh viên' : 'Sửa sinh viên' }</h4>\r\n                    <span className=\"close-form\">x</span>\r\n                </div>\r\n                <form className=\"form-control\">\r\n                    <div className=\"input-name\">\r\n                        <label>Tên</label>\r\n                        <input type=\"text\"\r\n                            defaultValue={itemEdit[0].editing === false ? '' : this.inputName.current.value = itemEdit[1].name} \r\n                            ref={this.inputName} />\r\n                    </div>\r\n                    <div className=\"input-status\">\r\n                        <label>Tình trạng</label>\r\n                        <select ref={this.inputStatus} >\r\n                            <option>Đang học</option>\r\n                            <option>Đã nghĩ</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"ctrl-task-form\">\r\n                        <button onClick={(e) => this.saveItem(e)}>Lưu lại</button>\r\n                        <button onClick={(e) => this.cancelAddItem(e)}>Huỷ</button>\r\n                    </div>\r\n                </form>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        itemEdit: state.editItem,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        saveItem: (value) => {\r\n            dispatch(actions.addItem(value));\r\n        },\r\n        changeEditing: (item) => {\r\n            dispatch(actions.editItem(item));\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskForm);\r\n","import React, { Component } from 'react'; \r\nimport { connect } from 'react-redux';\r\nimport * as actions from './Actions/actions';\r\n   \r\nclass TaskControl extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.inputSearch = React.createRef();\r\n    }\r\n\r\n    onSearch = (keyword) => {\r\n        this.props.onSearchItem(keyword.current.value);\r\n        this.inputSearch.current.value = '';\r\n    }\r\n\r\n    onSortItem = (typeSort) => {\r\n        this.props.onSortItem(typeSort)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"task-control row\">\r\n                <div className=\"col-md-9 search-ctrl\">\r\n                    <input type=\"text\" ref={this.inputSearch}/>\r\n                    <button onClick={() => this.onSearch(this.inputSearch)}>Tìm kiếm</button>\r\n                </div>\r\n                <div className=\"col-md-3 sort-form\">\r\n                    <button className=\"sort-ctrl\">Sắp xếp</button>\r\n                    <ul className=\"dropdown-menu-sort\">\r\n                        <li onClick={() => this.onSortItem('')} >Mặc Định</li>\r\n                        <li onClick={() => this.onSortItem('A-Z')}>Từ A - Z</li>\r\n                        <li onClick={() => this.onSortItem('Z-A')}>Từ Z - A</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onSearchItem: (keyword) => {\r\n            dispatch(actions.searchItem(keyword));\r\n        },\r\n        onSortItem: (typeSort) => {\r\n            dispatch(actions.sortItem(typeSort));\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapDispatchToProps, mapDispatchToProps)(TaskControl);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from './Actions/actions';\r\n\r\nclass TaskContent extends Component {\r\n\r\n    deleteItem(id) {\r\n        this.props.deleteItem(id);\r\n        window.location.reload();\r\n    }\r\n\r\n    editItem =(item, index) => {\r\n        this.props.editItem(item, index);\r\n    }\r\n\r\n    render() {\r\n        const { listItem, keywordSearch, sortItem } = this.props;\r\n        let itemsShow;\r\n\r\n        if (keywordSearch.trim().length === 0) {\r\n            itemsShow = [...listItem];\r\n        } else {\r\n            itemsShow = listItem.filter(item => item.name.toLowerCase().indexOf(keywordSearch) !== -1)\r\n        }\r\n        \r\n        if (sortItem === 'A-Z') {\r\n            itemsShow.sort(function (a, b) {\r\n                let x = a.name.toLowerCase();\r\n                let y = b.name.toLowerCase();\r\n                if (x > y) { return 1 }\r\n                if (x < y) { return -1 }\r\n                return 0;\r\n            });\r\n        }\r\n        if (sortItem === 'Z-A') {\r\n            itemsShow.sort(function (a, b) {\r\n                let x = a.name.toLowerCase();\r\n                let y = b.name.toLowerCase();\r\n                if (x > y) { return -1 }\r\n                if (x < y) { return 1 }\r\n                return 0;\r\n            });\r\n        }\r\n\r\n        const items = itemsShow.map((item, index) => {\r\n            return (\r\n                <tr key={index}>\r\n                    <td>{index + 1}</td>\r\n                    <td>{item.name}</td>\r\n                    <td>{item.status ? 'Đang học' : 'Đã nghĩ'}</td>\r\n                    <td>\r\n                        <button className=\"ctrl-edit\"\r\n                            onClick={() => this.editItem(item, index)}>Sửa</button>\r\n                        <button className=\"ctrl-delete\"\r\n                            onClick={() => this.deleteItem(item.id)}>Xoá\r\n                        </button>\r\n                    </td>\r\n                </tr>\r\n            )\r\n        });\r\n        return (\r\n            <div className=\"task-content\">\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>STT</th>\r\n                            <th>Tên</th>\r\n                            <th>Trạng thái</th>\r\n                            <th>Hành động</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        { items }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }   \r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        listItem: state.items,\r\n        keywordSearch: state.searchItem,\r\n        sortItem: state.sortItem,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        deleteItem: (id) => {\r\n            dispatch(actions.deleteItem(id));\r\n        },\r\n        editItem: (item, index) => {\r\n            dispatch(actions.editItem(item, index));\r\n        }\r\n    } \r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskContent);\r\n","import './App.css';\nimport './bootstrap-grid.min.css';\n\nimport React, { Component } from 'react';\nimport TaskForm from './Components/taskForm';\nimport TaskControl from './Components/taskControl';\nimport TaskContent from './Components/taskContent';\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            taskItems: [],\n            editting: {\n                editStatus: false,\n                editTaskIndex: null,\n            },\n            wordOnSearch: '',\n        }\n    }\n\n    // addItem = (valueName, valueStatus ,index) => {\n    //     const editting = {\n    //         editStatus: false,\n    //         editTaskIndex: null,\n    //     };\n    //     if (index === null) {\n    //         this.setState({\n    //             taskItems: this.state.taskItems.concat({\n    //                 name: valueName,\n    //                 status: valueStatus,\n    //             }),\n    //             editting: editting,\n    //         })\n    //     } else {\n    //         let taskItems = this.state.taskItems;\n    //         taskItems[index] = {\n    //             name: valueName,\n    //             status: valueStatus,\n    //         }\n    //         this.setState({\n    //             taskItems: taskItems,\n    //             editting: editting,\n    //         })\n    //     }\n    // }\n\n    editTask = (index) => {\n        const editting = {\n            editStatus: true,\n            editTaskIndex: index,\n        }\n        this.setState({\n            editting: editting,\n        });\n    }\n\n    valueSearch = (valueSearch) => {\n        this.setState({\n            wordOnSearch: valueSearch,\n        })\n    }\n\n    render() {\n        const { taskItems, wordOnSearch } = this.state;\n        return (\n            <div className=\"App container\">\n                <h1 className=\"title-header\">Quản Lý Sinh Viên</h1>\n                <div className=\"row\">\n                    <div className=\"col-md-4\">\n                        <TaskForm editTaskItem = {this.state} />\n                    </div>\n                    <section className=\"wrapped col-md-8\">\n                        <TaskControl valueSearch={this.valueSearch} />\n                        <TaskContent taskItems={taskItems} deleteItem={this.deleteItem}\n                            editTask={this.editTask} wordOnSearch={wordOnSearch}\n                        />\n                    </section>\n                </div>\n            </div>\n        );\n    }\n\n    // componentDidUpdate() {\n    //     window.localStorage.setItem('key', JSON.stringify(this.state.taskItems));\n    // }\n\n    // componentDidMount() {\n    //     let item = window.localStorage.getItem('key');\n    //     if (item === null) {\n    //         return\n    //     } else {\n    //         this.setState({\n    //             taskItems: JSON.parse(item)\n    //         })\n    //     }\n    // }\n    \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as constants from '../Constants/constants'\r\n\r\nconst dataLocal = JSON.parse(localStorage.getItem('items'));\r\nconst initialState = dataLocal ? dataLocal : [];\r\n\r\nconst myReducers = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case constants.LIST_ITEM:\r\n            return [...state];\r\n        case constants.ADD_ITEM:\r\n            let index;\r\n            for (let i = 0; i < state.length; i++) {\r\n                if (state[i].id === action.item.id) {\r\n                    index = i;\r\n                }\r\n            }\r\n            if (index !== undefined) {\r\n                state.splice(index, 1, action.item);\r\n\r\n            } else {\r\n                state.push(action.item);\r\n            }\r\n            localStorage.setItem('items', JSON.stringify(state));\r\n            return [...state];\r\n        case constants.DELETE_ITEM:\r\n            const newItems = state.filter((item) => item.id !== action.id);\r\n            localStorage.setItem('items', JSON.stringify(newItems));\r\n            return newItems;\r\n        default: return [...state];\r\n    }\r\n}\r\n\r\nexport default myReducers;","import * as constants from '../Constants/constants'\r\n\r\nconst initialState = [\r\n    {\r\n        editing: false,\r\n    },\r\n]\r\n\r\nconst myReducers = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case constants.EDIT_ITEM:\r\n            if (action.item.id) {\r\n                state[0].editing = true;\r\n                state[1] = action.item;\r\n                state[2] = action.index;\r\n            } else {\r\n                state[0].editing = false;\r\n                state.splice(1, 2);\r\n            }\r\n            return [...state];\r\n        default: return [...state];\r\n    }\r\n}\r\n\r\nexport default myReducers;","import * as constants from '../Constants/constants'\r\n\r\nconst initialState = '';\r\n\r\nconst myReducers = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case constants.SEARCH_ITEM:\r\n            return action.keyword;\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default myReducers;","import * as constants from '../Constants/constants'\r\n\r\nconst initialState = '';\r\n\r\nconst myReducers = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case constants.SORT_ITEM:\r\n            return action.typeSort;\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default myReducers;","import { combineReducers } from \"redux\";\r\nimport items from './items';\r\nimport editItem from './editItem';\r\nimport searchItem from './searchItem';\r\nimport sortItem from './sortItem';\r\n\r\nconst myReducers = combineReducers({\r\n    items,\r\n    editItem,\r\n    searchItem,\r\n    sortItem,\r\n});\r\n\r\nexport default myReducers;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createStore } from 'redux';\nimport myReducers from './Components/Reducers/index';\nimport { Provider } from 'react-redux';\n\nconst store = createStore(myReducers,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nconsole.log(store.getState());\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>  \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}